@model Blogifier.Core.Data.Models.AdminEditorModel
@using Blogifier.Core.Common
@{
    var postCover = string.IsNullOrEmpty(Model.BlogPost.Image) ? Model.Profile.Image : Model.BlogPost.Image;
    if (string.IsNullOrEmpty(postCover)) { postCover = ApplicationSettings.PostImage; }
}
<div id="post-edit" class="bf-editor d-flex flex-column">
    <form id="frmEditor" class="bf-editor-form">
        <div class="bf-editor-header bf-editor-cover" style="background-image:url(@postCover);">
            <textarea class="bf-editor-title" id="txtPostTitle" rows="1" placeholder="Post title..." autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false">@Model.BlogPost.Title</textarea>
        </div>
        <textarea id="txtContent" name="txtContent" class="form-control form-control-text" placeholder="Post Content...">@Model.BlogPost.Content</textarea>
        <input type="hidden" id="hdnPostId" name="hdnPostId" value="@Model.BlogPost.Id" />
        <input type="hidden" id="hdnPostSlug" name="hdnPostSlug" value="@Model.BlogPost.Slug" />
        <input type="hidden" id="hdnPostImg" name="hdnPostImg" value="@Model.BlogPost.Image" />
        <input type="hidden" id="hdnPublished" name="hdnPublished" value="@Model.BlogPost.Published" />
    </form>
    <div class="bf-editor-footer">
        <div class="btn-group btn-group-icon float-right">
            <button type="button" class="btn btn-sm btn-outline-primary" data-toggle="modal" data-target="#postSettings" title="Post Settings"><i class="fa fa-cog"></i></button>
            <button type="button" class="btn btn-sm btn-outline-primary" onclick="return fileManagerController.open(updatePostCoverCallback);" title="Change The Cover"><i class="fa fa-photo"></i></button>
        </div>
        <span id="action-buttons" class="float-left mr-2"></span>
        <a href="~/admin" class="btn btn-sm btn-cancel btn-outline-primary float-left">Cancel</a>
        <div class="loading loading-sm ml-3 float-left"><div class="loading-dot-1"></div><div class="loading-dot-2"></div><div class="loading-dot-3"></div></div>
    </div>
</div>

<div class="modal fade" id="postSettings" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Post Settings</h4>
                <button class="close" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body bf-editor-settings">
                <div class="bf-editor-category">
                    <h5>Category</h5>
                    <form id="frmCategory">
                        <input type="text" id="txtCategory" title="Type and Enter" autocomplete="off" onkeypress="editorController.categoryKeyPress(event)" class="form-control" placeholder="Category Name..." />
                    </form>
                    <ul id="edit-categories">
                        @foreach (var category in Model.CategoryList)
                        {
                            <li id="cat-@category.Value">
                                <label class="custom-control custom-checkbox">
                                    @if (category.Selected)
                                    {
                                        <input type="checkbox" id="cbx-@category.Value" value="@category.Value" checked="checked" class="custom-control-input">
                                    }
                                    else
                                    {
                                        <input type="checkbox" id="cbx-@category.Value" value="@category.Value" class="custom-control-input">
                                    }
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description">@category.Text</span>
                                </label>
                                <i class="fa fa-times" aria-label="Delete" onclick="editorController.removeCategory('@category.Value')"></i>
                            </li>
                        }
                    </ul>
                </div>
                <div class="bf-editor-description">
                    <h5>Description</h5>
                    <textarea rows="6" id="txtDescription" class="form-control">@Model.BlogPost.Description</textarea>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("~/Views/Blogifier/Admin/Standard/_Shared/_FileManager.cshtml")
@section Scripts{
    <script>
        var textarea = document.getElementById("txtPostTitle");
        var limit = 200;

        textarea.oninput = function () {
            textarea.style.height = "";
            textarea.style.height = Math.min(textarea.scrollHeight, 300) + "px";
        };
    </script>
    <script src="~/embedded/admin/standard/js/lib/autosize.min.js"></script>
    <script src="~/embedded/admin/standard/js/lib/tinymce/tinymce.min.js"></script>
    <script src="~/embedded/admin/standard/js/app/fileManagerController.js"></script>
    <script src="~/embedded/admin/standard/js/app/editorController.js"></script>

    <script>
        autosize($('#txtPostTitle'));

        editorController.loadPostImage();
        editorController.loadActionButtons();

        var insertImageCallback = function (data) {
            if (data.assetType === 0) {
                tinymce.activeEditor.execCommand('mceInsertContent', false, '<img src="' + data.url + '" />');
            }
            else {
                var tag = '<a class="download" href="' + data.url + '">' + data.title + ' (' + humanFileSize(data.length) + ')</a>';
                tinymce.activeEditor.execCommand('mceInsertContent', false, tag);
            }
        }
        var updatePostCoverCallback = function (data) {
            $('.bf-editor-cover').css('background-image', 'url(' + data.url + ')');
            $('#hdnPostImg').val(data.url);
            toastr.success('Updated');
        }

        $(window).on("load", function () {
            var stickyNavTop = 57;
            var stickyNav = function () {
                var scrollTop = $(window).scrollTop();
                if (scrollTop > stickyNavTop && $(window).width() <= 880) {
                    $(".mce-tinymce").addClass('sticky');
                } else {
                    $(".mce-tinymce").removeClass('sticky');
                }
            };
            stickyNav();
            $(window).scroll(function () {
                stickyNav();
            });
        });


    </script>
}